/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/sBaZio40tDK
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Archivo } from 'next/font/google'
import { Libre_Franklin } from 'next/font/google'

archivo({
  subsets: ['latin'],
  display: 'swap',
})

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import React, { useState, useMemo } from "react"
import { Input } from "@/components/ui/input"
import { Card, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { restaurants } from "@/public/data"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select"
import Link from "next/link"
import { CartesianGrid, XAxis, Area, AreaChart, Line, LineChart } from "recharts"
import { ChartTooltipContent, ChartTooltip, ChartContainer } from "@/components/ui/chart"

export function MainPage() {
  const [searchQuery, setSearchQuery] = useState("")
  const [filters, setFilters] = useState({
    township: "all",
    rating: "all",
    type: "all",
  })

  const [search, setSearch] = React.useState('');
  const [filteredResults, setFilteredResults] = React.useState([]);

  const SearchChange = (event) => {
    const query = event.target.value.toLowerCase();
    setSearch(query);
  
    if (query) {
      const results = restaurants.filter((restaurant) => {
        return (
          restaurant.name.toLowerCase().includes(query) ||
          restaurant.type.toLowerCase().includes(query) ||
          restaurant.address.toLowerCase().includes(query)
        );
      });
      setFilteredResults(results);
    } else {
      setFilteredResults([]);
    }
  };

  const searchResultsRef = React.useRef(null);

  // Function to hide search results
  const hideSearchResults = () => {
    setFilteredResults([]);
  };

  // Event listener to detect clicks outside the search results container
  const handleClickOutside = (event) => {
    if (searchResultsRef.current && !searchResultsRef.current.contains(event.target)) {
      hideSearchResults();
    }
  };

  // Add event listener when the component mounts and remove it when it unmounts
  React.useEffect(() => {
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);


  const filteredRestaurants = useMemo(() => {
    return restaurants
      .filter((restaurant) => {
        const { township, rating, type } = filters
        return ((township === "all" || restaurant.township === township) &&
          (rating === "all" || restaurant.rating >= parseFloat(rating)) && (type === "all" || restaurant.type.toLowerCase().includes(type.toLowerCase())));
      })
      .filter((restaurant) =>
        restaurant.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
        restaurant.type.toLowerCase().includes(searchQuery.toLowerCase()) ||
        restaurant.address.toLowerCase().includes(searchQuery.toLowerCase()));
  }, [searchQuery, filters])
  const handleSearchChange = (e) => {
    setSearchQuery(e.target.value)
  }
  const handleFilterChange = (type, value) => {
    setFilters((prevFilters) => ({
      ...prevFilters,
      [type]: value,
    }))
  }


  return (
    (<div className="flex flex-col h-full">
      <header className="absolute top-0 left-0 w-full z-50 bg-pri mary text-primary-foreground py-4 px-6">
        <div className="max-w-7xl mx-auto flex items-center">
          <h1 className="text-2xl font-semibold">Discover Restaurants & Cafes</h1>
          <div className="ml-auto relative w-full max-w-md">
            <div
              className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground" />
            <Input
              type="text"
              placeholder="Search by location or type"
              value={search}
              onChange={SearchChange}
              className="pl-10 pr-4 py-2 rounded-[30px] w-full text-[black]"
              />
            <div ref={searchResultsRef} className="absolute mt-1 z-10 w-full bg-white flex flex-col bg-secondary text-[black] rounded-[20px] max-h-52 overflow-hidden">
              {filteredResults.map((result) => (
                <a
                  href={"#" + result.id}
                  key={result.id}
                  className="cursor-pointer py-2 px-5 hover:bg-gray-100"
                >
                  {result.name}
                </a>
              ))}
            </div>
          </div>
        </div>
      </header>
      <section
        className="w-full h-screen flex items-center bg-[url(https://cdn.jevelin.shufflehound.com/wp-content/uploads/sites/17/2018/01/background-slider.jpg)] bg-center bg-left">
        <div className="container mx-auto max-w-6xl text-center font-semibold text-secondary">
          <div className="italic text-xl lg:text-4xl font-semibold text-pretty text-primary">Premium</div>
          <div className="text-4xl lg:text-8xl pb-10">Resturant & Cafe</div>
          {/* <div className="">Find out more</div> */}
        </div>
      </section>

      <main className="flex-1 max-w-7xl mx-auto px-4 py-8 md:px-6 md:py-12">
        <div className="grid grid-cols-1 md:grid-cols-10 gap-8">
          <div className="col-span-7">
            <h2 className="text-2xl font-semibold py-10">Top Rated Restaurants</h2>
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
              {filteredRestaurants.map((restaurant) => (
                <Card key={restaurant.id} className="flex relative flex-col hover:shadow-2xl hover:scale-105 duration-300">
                  <div className="absolute -top-20" id={restaurant.id}></div>

                  <img
                    src="/placeholder.svg"
                    alt={restaurant.name}
                    width={400}
                    height={300}
                    className="rounded-t-lg object-cover w-full aspect-[4/3]" />
                  <CardContent className="flex-1 p-4 bg-background h-full flex flex-col justify-between">
                    <div>
                      <h3 className="text-lg font-semibold">{restaurant.name}</h3>
                      <p className="text-muted-foreground text-sm">{restaurant.type}</p>
                      <div className="flex items-center gap-2 mt-2">
                        <div className="flex items-center gap-1 text-primary">
                          <StarIcon className="w-5 h-5" />
                          <span>{restaurant.rating}</span>
                        </div>
                        <span className="text-muted-foreground text-sm">({restaurant.township})</span>
                      </div>
                      <p className="text-muted-foreground text-sm mt-2">{restaurant.address}</p>
                    </div>
                    <Button className="mt-4 me-auto text-destructive/80 border-destructive/40 border-2 bg-secondary hover:bg-destructive/20">
                      View Details
                    </Button>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
          <div className="col-span-3 rounded-lg relative">
            <div className="bg-bord er sticky top-0 py-10 left-0 p-6">
              <h2 className="text-xl font-bold mb-4">Filters</h2>
              <div className="grid gap-4">
                <div>
                  <Label htmlFor="township">Township</Label>
                  <Select
                    id="township"
                    value={filters.township}
                    onValueChange={(e) => handleFilterChange("township", e)}>
                    <SelectTrigger className="w-full">
                      <SelectValue placeholder="All" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="all">All</SelectItem>
                      <SelectItem value="Chanayethazan">Chanayethazan</SelectItem>
                      <SelectItem value="Aungmyaetharzan">Aungmyaetharzan</SelectItem>
                      <SelectItem value="Chanmyathazi">Chanmyathazi</SelectItem>
                      <SelectItem value="Mahaaungmye">Mahaaungmye</SelectItem>
                      <SelectItem value="Patheingyi">Patheingyi</SelectItem>
                      <SelectItem value="Pyigyidagun">Pyigyidagun</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <div>
                  <Label htmlFor="rating">Rating</Label>
                  <Select
                    id="rating"
                    value={filters.rating}
                    onValueChange={(e) => handleFilterChange("rating", e)}>
                    <SelectTrigger className="w-full">
                      <SelectValue placeholder="All" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="all">All</SelectItem>
                      <SelectItem value="4">4 & above</SelectItem>
                      <SelectItem value="4.5">4.5 & above</SelectItem>
                      <SelectItem value="5">5</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                <div>
                <Label htmlFor="type">Genre</Label>
                <Select
                  id="type"
                  value={filters.type}
                  onValueChange={(e) => handleFilterChange("type", e)}>
                  <SelectTrigger className="w-full">
                    <SelectValue placeholder="All" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">All</SelectItem>
                    <SelectItem value="Burmese">Burmese</SelectItem>
                    <SelectItem value="Indian">Indian</SelectItem>
                    <SelectItem value="European">European</SelectItem>
                    <SelectItem value="Chinese">Chinese</SelectItem>
                    <SelectItem value="Thai">Thai</SelectItem>
                    <SelectItem value="Asian">Asian</SelectItem>
                    <SelectItem value="Italian">Italian</SelectItem>
                    <SelectItem value="International">International</SelectItem>
                  </SelectContent>
                </Select>
                </div>
                <div>
                <Label htmlFor="type">Type</Label>
                <Select
                  id="type"
                  value={filters.type}
                  onValueChange={(e) => handleFilterChange("type", e)}>
                  <SelectTrigger className="w-full">
                    <SelectValue placeholder="All" />
                  </SelectTrigger>
                  <SelectContent className="h-64">
                    <SelectItem value="all">All</SelectItem>
                    <SelectItem value="Cafe">Cafe</SelectItem>
                    <SelectItem value="Bakery">Bakery</SelectItem>
                    <SelectItem value="Noodles">Noodles</SelectItem>
                    <SelectItem value="Tea House">Tea House</SelectItem>
                    <SelectItem value="Hot Pot">Hot Pot</SelectItem>
                    <SelectItem value="Steakhouse">Steakhouse</SelectItem>
                    <SelectItem value="Street Food">Street Food</SelectItem>
                    <SelectItem value="Vegetarian">Vegetarian</SelectItem>
                    <SelectItem value="Organic">Organic</SelectItem>
                    <SelectItem value="Tea Room">Tea Room</SelectItem>
                    <SelectItem value="Quick Bites">Quick Bites</SelectItem>
                    <SelectItem value="Grill">Grill</SelectItem>
                    <SelectItem value="Bar">Bar</SelectItem>
                    <SelectItem value="Fusion">Fusion</SelectItem>
                    <SelectItem value="Royal">Royal</SelectItem>
                    <SelectItem value="Pizzera">Pizzeria</SelectItem>
                    <SelectItem value="Bistro">Bistro</SelectItem>
                    <SelectItem value="Salad, Healthy">Salad, Healthy</SelectItem>
                    <SelectItem value="Biryani">Biryani</SelectItem>
                    {/* ... Add more types as needed */}
                  </SelectContent>
                </Select>
                </div>
                <div>
                  <Label htmlFor="type">Type</Label>
                  <Input
                    id="type"
                    type="text"
                    placeholder="All"
                    value={filters.type}
                    onChange={(e) => handleFilterChange("type", e.target.value)} />
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>

      <footer className="text-secondary py-6 w-full bg-destructive">
        <div
          className="container max-w-6xl mx-auto flex flex-col md:flex-row items-center justify-between px-4 md:px-6">
          <p className="text-sm">&copy; 2024 Acme Restaurants. All rights reserved.</p>
          <nav className="flex gap-4 mt-4 md:mt-0">
            <Link href="#" className="text-sm hover:underline" prefetch={false}>
              Privacy Policy
            </Link>
            <Link href="#" className="text-sm hover:underline" prefetch={false}>
              Terms of Service
            </Link>
            <Link href="#" className="text-sm hover:underline" prefetch={false}>
              Contact Us
            </Link>
          </nav>
        </div>
      </footer>
    </div>)
  );
}

function StarIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <polygon
        points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
    </svg>)
  );
}